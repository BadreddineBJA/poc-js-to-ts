/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Label = string[];
/**
 * generate or not the PPP init code, call it or not at boot
 */
export type ResourceInitializationCodeGeneration = ResourceInitializationCodeGeneration1 &
  ResourceInitializationCodeGeneration2;
export type ResourceInitializationCodeGeneration1 = "called" | "enabled" | "disabled";
export type ResourceInitializationCodeGeneration2 = string;
/**
 * name of the configuration
 */
export type ConfigName = string;
export type UP = "TIM_COUNTERMODE_UP";
export type DOWN = "TIM_COUNTERMODE_DOWN";
export type CENTERALIGNED1 = "TIM_COUNTERMODE_CENTERALIGNED1";
export type CENTERALIGNED2 = "TIM_COUNTERMODE_CENTERALIGNED2";
export type CENTERALIGNED3 = "TIM_COUNTERMODE_CENTERALIGNED3";
export type DIV1 = 1;
export type DIV2 = 2;
export type DIV4 = 4;
export type CHANNEL1 = 1;
export type CHANNEL2 = 2;
export type CHANNEL3 = 3;
export type CHANNEL4 = 4;
export type CHANNEL5 = 5;
export type CHANNEL6 = 6;
export type PWM = 1;
export type TIMING = "TIM_OCMODE_TIMING";
export type ACTIVE = "TIM_OCMODE_ACTIVE";
export type INACTIVE = "TIM_OCMODE_INACTIVE";
export type TOGGLE = "TIM_OCMODE_TOGGLE";
export type PWM1 = "TIM_OCMODE_PWM1";
export type PWM2 = "TIM_OCMODE_PWM2";
export type FORCED_ACTIVE = "TIM_OCMODE_FORCED_ACTIVE";
export type FORCED_INACTIVE = "TIM_OCMODE_FORCED_INACTIVE";
export type RETRIGERRABLE_OPM1 = "TIM_OCMODE_RETRIGERRABLE_OPM1";
export type RETRIGERRABLE_OPM2 = "TIM_OCMODE_RETRIGERRABLE_OPM2";
export type COMBINED_PWM1 = "TIM_OCMODE_COMBINED_PWM1";
export type COMBINED_PWM2 = "TIM_OCMODE_COMBINED_PWM2";
export type ASSYMETRIC_PWM1 = "TIM_OCMODE_ASSYMETRIC_PWM1";
export type ASSYMETRIC_PWM2 = "TIM_OCMODE_ASSYMETRIC_PWM2";
export type PULSE_ON_COMPARE = "TIM_OCMODE_PULSE_ON_COMPARE";
export type DIRECTION_OUTPUT = "TIM_OCMODE_DIRECTION_OUTPUT";
export type HIGH = "TIM_OCPOLARITY_HIGH";
export type LOW = "TIM_OCPOLARITY_LOW";
export type HIGH1 = "TIM_OCNPOLARITY_HIGH";
export type LOW1 = "TIM_OCNPOLARITY_LOW";
export type DISABLE = "TIM_OCFAST_DISABLE";
export type ENABLE = "TIM_OCFAST_ENABLE";
export type SET = "TIM_OCIDLESTATE_SET";
export type RESET = "TIM_OCIDLESTATE_RESET";
export type SET1 = "TIM_OCNIDLESTATE_SET";
export type RESET1 = "TIM_OCNIDLESTATE_RESET";

export interface Stm32U5XxHalTimParameters {
  resources?: {
    instance?: {
      [k: string]: unknown;
    };
  };
  blocks?: {
    info?: {
      labels?: Label;
      init_type?: ResourceInitializationCodeGeneration;
    };
    configs?: {
      cfg_name?: ConfigName;
      /**
       * TIM Time base Configuration Structure definition.
       */
      TIM_Base_InitTypeDef?: {
        /**
         * Specifies the prescaler value used to divide the TIM clock. This parameter can be a number between Min_Data = 0x0000 and Max_Data = 0xFFFF Macro  __HAL_TIM_CALC_PSC()  can be used to calculate prescaler value
         */
        Prescaler?: number;
        /**
         * Specifies the counter mode. This parameter can be a value of  TIM Counter Mode
         */
        CounterMode?: (UP | DOWN | CENTERALIGNED1 | CENTERALIGNED2 | CENTERALIGNED3) & string;
        /**
         * Counter Period (AutoReload Register - 16 bits value)
         */
        Period?: number;
        /**
         * Specifies the clock division. This parameter can be a value of TIM Clock Division
         */
        ClockDivision?: number & (DIV1 | DIV2 | DIV4);
        /**
         * Repetition Counter (RCR - 8 bits value)
         */
        RepetitionCounter?: number;
        /**
         * Specifies the auto-reload preload. This parameter can be a value of  TIM Auto-Reload Preload
         */
        AutoReloadPreload?: boolean;
      };
      channels?: {
        channel?: number & (CHANNEL1 | CHANNEL2 | CHANNEL3 | CHANNEL4 | CHANNEL5 | CHANNEL6);
        /**
         * Mode defined for the channel
         */
        mode?: number & PWM;
        /**
         * TIM Output Compare Configuration Structure definition.
         */
        TIM_OC_InitTypeDef?: {
          /**
           * Specifies the TIM mode. This parameter can be a value of  TIM Output Compare and PWM Modes
           */
          OCMode?: (
            | TIMING
            | ACTIVE
            | INACTIVE
            | TOGGLE
            | PWM1
            | PWM2
            | FORCED_ACTIVE
            | FORCED_INACTIVE
            | RETRIGERRABLE_OPM1
            | RETRIGERRABLE_OPM2
            | COMBINED_PWM1
            | COMBINED_PWM2
            | ASSYMETRIC_PWM1
            | ASSYMETRIC_PWM2
            | PULSE_ON_COMPARE
            | DIRECTION_OUTPUT
          ) &
            string;
          /**
           * Specifies the pulse value to be loaded into the Capture Compare Register. This parameter can be a number between Min_Data = 0x0000 and Max_Data = 0xFFFF (or 0xFFEF if dithering is activated) Macros  __HAL_TIM_CALC_PULSE() ,  __HAL_TIM_CALC_PULSE_DITHER()  can be used to calculate Pulse value
           */
          Pulse?: number;
          /**
           * Specifies the output polarity. This parameter can be a value of  TIM Output Compare Polarity
           */
          OCPolarity?: (HIGH | LOW) & string;
          /**
           * Specifies the complementary output polarity. This parameter can be a value of  TIM Complementary Output Compare Polarity   This parameter is valid only for timer instances supporting break feature.
           */
          OCNPolarity?: (HIGH1 | LOW1) & string;
          /**
           * Specifies the Fast mode state. This parameter can be a value of  TIM Output Fast State   This parameter is valid only in PWM1 and PWM2 mode.
           */
          OCFastMode?: (DISABLE | ENABLE) & string;
          /**
           * Specifies the TIM Output Compare pin state during Idle state. This parameter can be a value of  TIM Output Compare Idle State   This parameter is valid only for timer instances supporting break feature.
           */
          OCIdleState?: (SET | RESET) & string;
          /**
           * Specifies the TIM Output Compare pin state during Idle state. This parameter can be a value of  TIM Complementary Output Compare Idle State   This parameter is valid only for timer instances supporting break feature.
           */
          OCNIdleState?: (SET1 | RESET1) & string;
        };
      }[];
    }[];
  };
}
