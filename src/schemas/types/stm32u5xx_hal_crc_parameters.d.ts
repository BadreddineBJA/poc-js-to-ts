/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Label = string[];
/**
 * generate or not the PPP init code, call it or not at boot
 */
export type ResourceInitializationCodeGeneration = ResourceInitializationCodeGeneration1 &
  ResourceInitializationCodeGeneration2;
export type ResourceInitializationCodeGeneration1 = "called" | "enabled" | "disabled";
export type ResourceInitializationCodeGeneration2 = string;
/**
 * name of the configuration
 */
export type ConfigName = string;
export type BYTES = "CRC_INPUTDATA_FORMAT_BYTES";
export type HALFWORDS = "CRC_INPUTDATA_FORMAT_HALFWORDS";
export type WORDS = "CRC_INPUTDATA_FORMAT_WORDS";
export type NONE = "CRC_INPUTDATA_INVERSION_NONE";
export type BYTE = "CRC_INPUTDATA_INVERSION_BYTE";
export type HALFWORD = "CRC_INPUTDATA_INVERSION_HALFWORD";
export type WORD = "CRC_INPUTDATA_INVERSION_WORD";

export interface Stm32U5XxHalCrcParameters {
  resources?: {
    instance?: {
      [k: string]: unknown;
    };
  };
  blocks?: {
    info?: {
      labels?: Label;
      init_type?: ResourceInitializationCodeGeneration;
    };
    configs?: {
      cfg_name?: ConfigName;
      /**
       * CRC Init Structure definition.
       */
      CRC_InitTypeDef?: {
        /**
         * This parameter is a value of  Indicates whether or not default polynomial is used  and indicates if default polynomial is used. If set to DEFAULT_POLYNOMIAL_ENABLE, resort to default X^32 + X^26 + X^23 + X^22 + X^16 + X^12 + X^11 + X^10 +X^8 + X^7 + X^5 + X^4 + X^2+ X +1. In that case, there is no need to set GeneratingPolynomial field. If otherwise set to DEFAULT_POLYNOMIAL_DISABLE, GeneratingPolynomial and CRCLength fields must be set.
         */
        DefaultPolynomialUse?: boolean;
        /**
         * This parameter is a value of  Indicates whether or not default init value is used  and indicates if default init value is used. If set to DEFAULT_INIT_VALUE_ENABLE, resort to default 0xFFFFFFFF value. In that case, there is no need to set InitValue field. If otherwise set to DEFAULT_INIT_VALUE_DISABLE, InitValue field must be set.
         */
        DefaultInitValueUse?: boolean;
        /**
         * Set CRC generating polynomial as a 7, 8, 16 or 32-bit long value for a polynomial degree respectively equal to 7, 8, 16 or 32. This field is written in normal, representation e.g., for a polynomial of degree 7, X^7 + X^6 + X^5 + X^2 + 1 is written 0x65. No need to specify it if DefaultPolynomialUse is set to DEFAULT_POLYNOMIAL_ENABLE.
         */
        CRC_Polynomial?: {
          [k: string]: unknown;
        };
        /**
         * This parameter is a value of  Input Buffer Format  and specifies input data format. Can be either
         *  CRC_INPUTDATA_FORMAT_BYTES  input data is a stream of bytes (8-bit data)
         *  CRC_INPUTDATA_FORMAT_HALFWORDS  input data is a stream of half-words (16-bit data)
         *  CRC_INPUTDATA_FORMAT_WORDS  input data is a stream of words (32-bit data)
         */
        InputDataFormat?: (BYTES | HALFWORDS | WORDS) & string;
        /**
         * Init value to initiate CRC computation. No need to specify it if DefaultInitValueUse is set to DEFAULT_INIT_VALUE_ENABLE.
         */
        InitValue?: number;
        /**
         * This parameter is a value of  Input Data Inversion Modes  and specifies input data inversion mode. Can be either one of the following values
         *  CRC_INPUTDATA_INVERSION_NONE  no input data inversion
         *  CRC_INPUTDATA_INVERSION_BYTE  byte-wise inversion, 0x1A2B3C4D becomes 0x58D43CB2
         *  CRC_INPUTDATA_INVERSION_HALFWORD  halfword-wise inversion, 0x1A2B3C4D becomes 0xD458B23C
         *  CRC_INPUTDATA_INVERSION_WORD  word-wise inversion, 0x1A2B3C4D becomes 0xB23CD458
         */
        InputDataInversionMode?: (NONE | BYTE | HALFWORD | WORD) & string;
        /**
         * This parameter is a value of  Output Data Inversion Modes  and specifies output data (i.e. CRC) inversion mode. Can be either
         *  CRC_OUTPUTDATA_INVERSION_DISABLE  no CRC inversion,
         *  CRC_OUTPUTDATA_INVERSION_ENABLE  CRC 0x11223344 is converted into 0x22CC4488
         */
        OutputDataInversionMode?: boolean;
      };
    }[];
  };
}
